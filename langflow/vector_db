import os
from dotenv import load_dotenv

load_dotenv()
clientId = os.getenv('clientId')
secret = os.getenv('secret')
ASTRA_DB_APPLICATION_TOKEN = os.getenv('token')
ASTRA_DB_API_ENDPOINT = os.getenv('vdb_endpoint')
google_api = os.getenv('Google_api')

import os
from astrapy import DataAPIClient
from astrapy.constants import VectorMetric
from astrapy.ids import UUID
from astrapy.exceptions import InsertManyException
from astrapy.info import CollectionVectorServiceOptions

# Initialize the client and get a "Database" object
client = DataAPIClient(ASTRA_DB_APPLICATION_TOKEN)
database = client.get_database(ASTRA_DB_API_ENDPOINT)

print(f"* Database: {database.info().name}\n")

def create_collection(collection_name):
    collection = database.create_collection(
    collection_name,
    metric=VectorMetric.DOT_PRODUCT,
    service=CollectionVectorServiceOptions(
        provider="openai",
        model_name="text-embedding-3-small",
        authentication={
            "providerKey": "key",
        },
    ),
    )

    return collection

def check_collections():
    collections = database.list_collection_names()
    print(collections)
    return collections

def insert_text(collection, text):
    return database[collection].insert_one(text)

if __name__ == '__main__':
    create_collection('test3245')
    collections = check_collections()
    print(insert_text('test3245',{'$vectorize' :'hihasoghasihhhhdsfao  fdsoaghoahog '}))